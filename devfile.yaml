metadata:
  name: vertx-http-booster-hqn4n
projects:
  - name: vertx-http-booster
    source:
      location: >-
        https://github.com/RickJWagner/vertx-devfile
      type: git
components:
  - id: redhat/java11/latest
    type: chePlugin
  - id: budparr.language-hugo-vscode
    type: chePlugin
    location: >-
       https://marketplace.visualstudio.com/items?itemName=budparr.language-hugo-vscode
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: 8080-tcp
        port: 8080
    memoryLimit: 512Mi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    image: >-
      registry.redhat.io/codeready-workspaces/plugin-java11-rhel8@sha256:cc6641ec663307133274080b6af1ea4e4cd01bb34a013cda5c42b3d4213a9c72
    alias: maven
    env:
      - value: >-
          -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
          -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true
          -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/jboss
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
apiVersion: 1.0.0
commands:
  - name: 1. Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/vertx-http-booster'
        type: exec
        command: >-
          MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} -DskipTestsclean
          install
        component: maven
  - name: 2. Run
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/vertx-http-booster'
        type: exec
        command: >-
          MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME}
          -Dvertx.disableDnsResolver=true vertx:run
        component: maven
  - name: 3. Run in debug mode
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/vertx-http-booster'
        type: exec
        command: >-
          MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} -DskipTests
          vertx:debug
        component: maven
  - name: 4. Run tests
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/vertx-http-booster'
        type: exec
        command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} -DskipTests verify '
        component: maven
  - name: 5. Log into deployment cluster
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/vertx-http-booster'
        type: exec
        command: |
          echo
          echo "Before you can deploy this application to an openshift cluster,"
          echo "you must run 'oc login ...' in the maven terminal."
          echo
        component: maven
  - name: 6. Deploy to OpenShift
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/vertx-http-booster'
        type: exec
        command: >-
          MAVEN_OPTS="-Xmx200m" &&  mvn fabric8:deploy -Popenshift -DskipTests
          -Dvertx.disableDnsResolver=true
        component: maven
  - name: Debug remote java application
    actions:
      - referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5005
            }]
          }
        type: vscode-launch

